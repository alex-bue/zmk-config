parse_config:
  zmk_additional_includes:
    - "/zmk-helpers/include"

  zmk_preamble: |
    #include <zmk-helpers/key-labels/34.h>

  preprocess: true

  skip_binding_parsing: false
  sticky_label: sticky
  toggle_label: toggle
  tap_toggle_label: tap-toggle
  mark_alternate_layer_activators: false
  trans_legend:
    tap: ""
    type: trans

  raw_binding_map:
    "&td_reset": { t: "td_reset" }
    "&bootloader": Boot
    "&td_bootloader": Tap Dance Boot
    "&caps_word": Caps Word
    "&leader": Leader
    "&smart_num": { "t": Smart-Num, "h": "navigation" }
    "&magic_shift": { "t": Magic, "h": "Shift" }
    "&kp LC(INS)": Copy
    "&kp LC(X)": Cut
    "&kp LS(INS)": Paste

    "&lpar_lt": { "t": "(", "right": "<" }
    "&rpar_gt": { "t": ")", "right": ">" }

  zmk_remove_keycode_prefix: ["AG"]

  zmk_combos:
    combo_cut: { align: bottom, o: 0.15 }

    combo_copy_mac: { hidden: true }
    combo_paste_mac: { hidden: true }
    combo_cut_mac: { hidden: true }

    combo_caps_word: { align: top, o: 1.15 }
    combo_alt: { draw_separate: true }
    combo_select_line: { draw_separate: true }

  zmk_keycode_map:
    # custom mappings
    LALT: Alt
    RALT: Alt
    LCTRL: Ctrl
    RCTRL: Ctrl
    LGUI: Gui
    RGUI: Gui
    LSHFT: Shift
    RSHFT: Shift

    BSPC: Bspc
    DEL: Del
    ESC: Esc
    ENTER: Enter
    RET: Enter
    SPACE: Spc
    TAB: Tab

    PG_UP: PgUp
    PG_DN: PgDn
    INS: Ins
    HOME: Home
    END: End

    UP: ↑
    DOWN: ↓
    LEFT: ←
    RIGHT: →

    C_MUTE: $$mdi:volume-off$$
    C_PP: $$mdi:play-pause$$
    C_PLAY_PAUSE: $$mdi:play-pause$$
    C_VOL_UP: $$mdi:volume-high$$
    C_VOL_DN: $$mdi:volume-medium$$
    C_NEXT: $$mdi:skip-forward$$
    C_PREV: $$mdi:skip-backward$$
    C_BRI_DN: $$mdi:brightness-5$$
    C_BRI_UP: $$mdi:brightness-7$$

    # defaults
    AMPERSAND: "&"
    AMPS: "&"
    APOS: "'"
    APOSTROPHE: "'"
    ASTERISK: "*"
    ASTRK: "*"
    AT: "@"
    AT_SIGN: "@"
    BACKSLASH: \
    BSLH: \
    CARET: ^
    COLON: ":"
    COMMA: ","
    DLLR: $
    DOLLAR: $
    DOT: .
    DOUBLE_QUOTES: '"'
    DQT: '"'
    EQUAL: "="
    EXCL: "!"
    EXCLAMATION: "!"
    FSLH: /
    GRAVE: "`"
    GREATER_THAN: ">"
    GT: ">"
    HASH: "#"
    LBKT: "["
    LBRC: "{"
    LEFT_BRACE: "{"
    LEFT_BRACKET: "["
    LEFT_PARENTHESIS: (
    LESS_THAN: <
    LPAR: (
    LT: <
    MINUS: "-"
    NON_US_BACKSLASH: \
    NON_US_BSLH: "|"
    NON_US_HASH: "#"
    NUHS: "#"
    PERCENT: "%"
    PERIOD: .
    PIPE: "|"
    PIPE2: "|"
    PLUS: +
    POUND: "#"
    PRCNT: "%"
    QMARK: "?"
    QUESTION: "?"
    RBKT: "]"
    RBRC: "}"
    RIGHT_BRACE: "}"
    RIGHT_BRACKET: "]"
    RIGHT_PARENTHESIS: )
    RPAR: )
    SEMI: ;
    SEMICOLON: ;
    SINGLE_QUOTE: "'"
    SLASH: /
    SQT: "'"
    STAR: "*"
    TILDE: "~"
    TILDE2: "~"
    UNDER: _
    UNDERSCORE: _

draw_config:
  key_w: 65
  key_h: 55

  # padding between keys
  inner_pad_w: 3
  inner_pad_h: 3

  dark_mode: false
  append_colon_to_layer_header: false

  svg_extra_style: |
    rect.key {
        fill: #f6f8fa;
        stroke: none;      /* Remove border */
        stroke-width: 0;   /* Border width */
    }

    rect.key, rect.combo {
        stroke: none;
        stroke-width: 0;
    }

    rect.held, rect.combo.held {
        fill: #fdd;
    }

    text {
        text-anchor: middle;
        dominant-baseline: middle;
        // text-transform: lowercase;
    }

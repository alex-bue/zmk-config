// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define NUM 2
#define NAV 3
#define TRI 4

// Personal includes
#include "includes/conditional_layers.dtsi"
#include "includes/behaviors_homerow_mods.dtsi"
#include "includes/behaviors_other.dtsi"
#include "includes/combos.dtsi"

// Key positions reference
//   ╭────────────────────╮ ╭────────────────────╮
//   │  0   1   2   3   4 │ │  5   6   7   8   9 │
//   │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
//   │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
//   ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
//               ╰────────╯ ╰────────╯


/ { 

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q           &kp W       &kp E       &kp R             &kp T         &kp Y          &kp U                 &kp I         &kp O         &kp P
            &hm_l LCTRL A   &hm_l LALT  &hm_l LGUI  &hm_shift_l LSFT  &kp G         &kp H          &hm_shift_r RSHFT J   &hm_r RGUI K  &hm_r RALT L  &hm_r LCTRL SQT 
            &ht RALT Z      &kp X       &kp C       &kp V             &kp B         &kp N          &kp M                 &kp COMMA     &kp DOT       &ht RALT FSLH
                                                    &lt NAV TAB       &lt SYM ESC   &lt NUM ENTER  &lt NAV SPACE
            >;
        };

        symbols_layer {
            bindings = <
            &kp EXCL   &kp AT     &kp HASH   &kp DOLLAR  &kp PERCENT          &kp EQUAL  &kp GRAVE  &kp LPAR  &kp RPAR   &kp PLUS
            &kp LCTRL  &kp LALT   &kp LGUI   &kp LSFT    &kp CARET            &kp ASTRK  &kp COLON  &kp LBKT  &kp RBKT   &kp MINUS
            &trans     &trans     &kp BSLH   &kp PIPE    &kp AMPS             &kp TILDE  &kp SEMI   &kp LBRC  &kp RBRC   &kp UNDER
                                             &trans      &trans               &trans     &trans
            >;
        };

        numbers_layer {
            bindings = <
            &kp N1     &kp N2    &kp N3      &kp N4    &kp N5                 &kp N6     &kp N7     &kp N8    &kp N9     &kp N0
            &kp LCTRL  &kp LALT  &kp LGUI    &kp LSFT  &trans                 &trans     &kp LSFT   &kp LGUI  &kp LALT   &kp LCTRL
            &trans     &trans    &trans      &trans    &trans                 &trans     &trans     &trans    &trans     &trans
                                             &trans    &trans                 &trans     &trans
            >;
        };

        navigation_layer {
            bindings = <
            &kp LA(N1)  &kp LA(N2) &kp LA(N3) &kp LA(N4)  &kp LA(N5)          &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP  &kp C_NEXT  &kp C_MUTE
            &kp LCTRL   &kp LALT   &kp LGUI   &kp LSFT    &trans              &kp LEFT   &kp DOWN     &kp UP        &kp RIGHT   &kp C_PLAY_PAUSE
            &trans      &trans     &trans     &trans      &trans              &trans     &kp C_BRI_DN &kp C_BRI_UP  &trans      &trans
                                              &trans      &trans              &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
            &trans          &trans  &trans  &trans  &trans    &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &kp C_MUTE
            &trans          &trans  &trans  &trans  &trans    &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
            &td_bootloader  &trans  &trans  &trans  &trans    &out OUT_TOG  &kp C_BRI_UP  &kp C_BRI_DN  &trans        &td_bootloader
                                            &trans  &trans    &trans        &trans
            >;
        };
    };
};

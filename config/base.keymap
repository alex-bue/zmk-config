// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

// ZMK includes
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define NUM 2
#define NUMPAD 3
#define NAV 4
#define FN 5
#define WM 6
#define SYS 7

// Personal includes
#include "includes/conditional_layers.dtsi"
#include "includes/behaviors_homerow_mods.dtsi"
#include "includes/behaviors_other.dtsi"
#include "includes/combos.dtsi"

/ { 

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q           &kp W         &kp E         &kp R               &kp T          &kp Y          &kp U                &kp I         &kp O         &kp P
            &hm_l LCTRL A   &hm_l LALT S  &hm_l LGUI D  &hm_shift_l LSHFT F &kp G          &kp H          &hm_shift_r LSHFT J  &hm_r RGUI K  &hm_r LALT L  &hm_r LCTRL SQT
            &lt WM Z      &kp X         &kp C           &lt NUMPAD V        &kp B          &kp N          &kp M                &kp COMMA     &kp DOT       &ht RALT FSLH
                                                        &lt NAV TAB         &lt SYM UNDER  &lt NUM ENTER  &lt FN SPACE
            >;
        };

        symbols_layer {
            bindings = <
            &trans     &kp LT     &kp GT     &kp BSLH    &kp GRAVE         &kp AMPS  &kp GRAVE  &kp LPAR  &kp RPAR   &kp UNDER
            &kp EXCL   &kp MINUS  &kp PLUS   &kp EQUAL   &kp HASH          &kp PIPE  &kp COLON  &kp LBKT  &kp RBKT   &kp PERCENT
            &trans     &kp SLASH  &kp ASTRK  &kp CARET   &kp AMPS          &kp TILDE &kp DOLLAR &kp LBRC  &kp RBRC   &kp AT
                                             &trans      &trans            &trans    &trans
            >;
        };

        numbers_layer {
            bindings = <
            &kp N1     &kp N2    &kp N3      &kp N4    &kp N5                 &kp N6     &kp N7     &kp N8    &kp N9     &kp N0
            &kp LCTRL  &kp LALT  &kp LGUI    &kp LSHFT  &trans                 &trans     &kp LSHFT   &kp LGUI  &kp LALT   &kp LCTRL
            &trans     &trans    &trans      &trans    &trans                 &trans     &trans     &trans    &trans     &trans
                                             &trans    &trans                 &trans     &trans
            >;
        };

        numpad_layer {
            bindings = <
            &trans     &trans    &trans    &trans    &trans    &kp FSLH   &kp N7  &kp N8  &kp N9  &kp PLUS
            &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT &trans    &kp ASTRK  &kp N4  &kp N5  &kp N6  &kp MINUS
            &trans     &trans    &trans    &trans    &trans    &kp COMMA  &kp N1  &kp N2  &kp N3  &kp DOT
                                           &trans    &trans    &kp N0     &trans
            >;
        };

        navigation_layer {
            bindings = <
            &kp LA(N1)  &kp LA(N2)  &kp LA(N3)    &kp LA(N4)  &kp LA(N5)          &kp HOME   &kp PG_DN    &kp PG_UP     &kp DEL     &kp BSPC
            &kp LCTRL   &kp LALT    &kp LGUI      &kp LSHFT   &trans              &kp LEFT   &kp DOWN     &kp UP        &kp RIGHT   &kp BSPC
            &trans      &kp LG(X)   &kp LG(C)     &kp LG(V)   &trans              &kp END    &kp LG(V)    &kp LG(C)     &kp LG(X)   &trans
                                                  &trans      &trans              &trans     &trans
            >;
        };

       fn_layer {
            bindings = <
            &kp F1      &kp F2     &kp F3     &kp F4      &kp F5              &trans     &kp C_PLAY_PAUSE &kp C_MUTE    &trans     &trans
            &kp F6      &kp F7     &kp F8     &kp F9      &kp F10             &kp C_PREV &kp C_VOL_DN     &kp C_VOL_UP  &kp C_NEXT &trans
            &kp F11     &kp F12    &kp F13    &kp F14     &kp F15             &trans     &kp C_BRI_DN     &kp C_BRI_UP  &trans     &trans
                                              &trans      &trans              &trans     &trans
            >;
        };

        wm_layer {
            bindings = <
            &trans     &trans    &trans    &trans     &trans    &kp LA(TAB)      &trans      &trans      &trans      &kp LA(LS(EQUAL))
            &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans           &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(LS(MINUS))
            &trans     &trans    &trans    &trans     &trans    &trans           &kp LA(N4)  &kp LA(N5)  &kp LA(N6)  &kp LA(LS(N0))
                                           &trans     &trans    &kp LS(LA(SEMI)) &trans
            >;
        };

        sys_layer {
            bindings = <
            &trans          &trans  &trans  &trans  &trans    &trans        &trans        &trans        &trans        &trans
            &trans          &trans  &trans  &trans  &trans    &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
            &td_bootloader  &trans  &trans  &trans  &trans    &out OUT_TOG  &trans        &trans        &trans        &td_bootloader
                                            &trans  &trans    &trans        &trans
            >;
        };
    };
};
